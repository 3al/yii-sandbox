<?phpclass AlbumController extends Controller{       //≈сли определено это свойство класса контроллера,     //все действи€ данного контроллера по умолчанию будут использовать данный макет,    //если же не определено, то будет использоватьс€ макет модул€ или же приложени€.    //ƒанное свойство можно динамически изменить дл€ конкретных действий.    public $layout = 'column1';        public $controllerProperty = 'test';       /**    * ≈сли действие определено в форме класса,    * то нужно информировать контроллер об этом действии    * с помощью метода actions    */    public function actions(){                $var1 = '111';        $var2 = '222';                return array(            'add' => array(                'class' => 'application.controllers.album.AddAction',               'property1' => $var1,                'property2' => $var2            )        );            }        /*    * Ќазначаем фильтры на определенные действи€.    * ≈сли фильтры не назначены, они примен€тьс€ не будут.    * ‘ильтры могут быть определены как в форме метода, так и в форме класса.    */    public function filters(){                return array(            // назначаем фильтр AcsessControl дл€ действи€ index            'acsessControl + index',            // назначаем фильтр Perfomance дл€ всех действий, кроме index            array(                'application.filters.PerfomanceFilter - index',                //инициализируем свойства фильтра начальными значени€ми                'unit' => 'second'            )        );    }        /*    * --------------------------------------    * ƒействи€, определенные в форме метода    * --------------------------------------    */        public function actionIndex()    {        //пример обращени€ к компонентам приложени€        //Yii::app()->log;                //echo "Album index"; exit;                        //$this->layout = 'column2';                //рендерим скрипт представлени€        //и передаем ему переменные        $this->render('index', array('var1' => 'val1'));            }            /*     * ----------------------------------------    * ‘ильтры, определенные в форме метода    * ----------------------------------------    */        /*    * ‘ильтр контрол€ доступа    */    public function filterAcsessControl($filterChain){                if(1 != 1){            // прерываем выполнение            return false;        }        else{            // продолжаем выполнение остальных фильтров            $filterChain->run();        }            }}